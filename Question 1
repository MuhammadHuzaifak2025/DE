import sympy as sp
import numpy as np
import math


# Question 01 a)
def root(func):

    y = func.find("D^2") - 1
    if func[y] == "+" or func[y] == "-" or func[y] == " ":
        A = 1
    else:
        if func[y - 2] == "-" or func[y - 2] == "+":
            A = int(func[y - 2] + func[y])
        else:
            A = int(func[y])
    # print(A)
    z = func.find("D" , (y + 3)) - 1
    if func[z] == "+" or func[z] == "-" or func[z] == " ":
        b = 1
    else:
        # b = int(func[z-2] + func[z])
        if func[z - 2] == "-":
            b = int(func[z]) * -1
        else:
            b = int(func[z])
    # print(b)
    a = len(func)
    if func[a - 4] == "+":
        c = int(func[a - 2] + func[a - 1])
    elif func[a - 4] == "-":
        c = int(func[a - 2] + func[a - 1]) * -1

    # print (c)
    root = np.roots([A , b , c])
    determinat = (pow(b , 2)) - 4 * A * c
    if determinat > 0:
        Yc = str(
            str("%.2f" % root.real[0] + "C\u2081") + "x" + " + " + str("%.2f" % root.real.real[1]) + "C\u2082" + "x")
    else:
        Yc = str(str("e^" + str("%.2f" % root.imag[0])) + "x" + "(C\u2081 cos" + str(
            "%.2f" % root.imag[0]) + "x + " + "C\u2082 sin" + str("%.2f" % root.imag[1]) + "x)")
    print(Yc)


def cal_Yp():
    F = sp.Function("f")(X)
    
    #     Taking subsitutuion of yp  e^2x(x^3 âˆ’ 5x^2)
    # yp = Ae^2x(Bx^3+CX^2+Dx+E)
    A ,B ,C ,D ,X = sp.symbols('A B C D X')
    y = sp.Function('f')(X)
    diff_eq = sp.Eq()
    eq = sp.exp(2 * X) * ((X ** 3 )- (5 * X ** 2))
    # equation = A * X * sp.exp(2 * X) + ((B * X ** 3) * (sp.exp(2 * X)))
    equation = sp.Eq((sp.exp(2*X))*(A*X**3+B*X**2+C*X+D))
    first_deriv = equation.diff(X)
    second_deriv = equation.diff(X, X)
    print(first_deriv)
    sp.pprint(second_deriv/sp.exp(2*X))
    F =sp.Eq(eq, second_deriv - (7*first_deriv) + 12)
    print(F)
    F = sp.simplify(F)
    result = sp.solve(F,(A,B,C,D))
    print(result)


def main():
    func = " D^2 - 7D + 12 = "
    root(func)
    print("Hello")
    cal_Yp()


main()
